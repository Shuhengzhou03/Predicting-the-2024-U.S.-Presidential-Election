#| echo: false
#| warning: false
#| message: false
#| results: "hide"
# 仅保留重要州的数据
key_states <- c("Florida", "Pennsylvania", "Michigan", "Wisconsin", "Arizona",
"Georgia", "Texas", "California", "New York", "North Carolina")
state_support_filtered <- state_support |>
filter(state %in% key_states)
# 绘制仅包含关键州的预测支持率图表
fig2 <- ggplot(state_support_filtered, aes(x = reorder(state, avg_support), y = avg_support, fill = candidate)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(
y = "Average Predicted Support Percentage",
x = "State",
title = "Average Predicted Support by Key States for Kamala Harris and Donald Trump"
) +
scale_fill_manual(values = c("Kamala Harris" = "blue", "Donald Trump" = "red")) +
coord_flip() +
theme(
axis.text.y = element_text(size = 8)
)
# 打印图形
print(fig2)
#| echo: false
#| warning: false
#| message: false
#| results: "hide"
# 仅保留重要州的数据
key_states <- c("Florida", "Pennsylvania", "Michigan", "Wisconsin", "Arizona",
"Georgia", "Texas", "California", "New York", "North Carolina", "Maryland")
state_support_filtered <- state_support |>
filter(state %in% key_states)
# 绘制仅包含关键州的预测支持率图表
fig2 <- ggplot(state_support_filtered, aes(x = reorder(state, avg_support), y = avg_support, fill = candidate)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(
y = "Average Predicted Support Percentage",
x = "State",
title = "Average Predicted Support by Key States for Kamala Harris and Donald Trump"
) +
scale_fill_manual(values = c("Kamala Harris" = "blue", "Donald Trump" = "red")) +
coord_flip() +
theme(
axis.text.y = element_text(size = 8)
)
# 打印图形
print(fig2)
#| echo: false
#| warning: false
#| message: false
#| results: "hide"
state_support <- combined_data |>
group_by(state, candidate) |>
summarize(avg_support = mean(fitted_pct), .groups = "drop")
# 仅保留重要州的数据
key_states <- c("Florida", "Pennsylvania", "Michigan", "Wisconsin", "Arizona",
"Georgia", "Texas", "California", "New York", "North Carolina", "Maryland")
state_support_filtered <- state_support |>
filter(state %in% key_states)
# 绘制仅包含关键州的预测支持率图表
fig2 <- ggplot(state_support_filtered, aes(x = reorder(state, avg_support), y = avg_support, fill = candidate)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(
y = "Average Predicted Support Percentage",
x = "State",
title = "Average Predicted Support by Key States for Kamala Harris and Donald Trump"
) +
scale_fill_manual(values = c("Kamala Harris" = "blue", "Donald Trump" = "red")) +
coord_flip() +
theme(
axis.text.y = element_text(size = 8)
)
# 打印图形
print(fig2)
#| echo: false
#| warning: false
#| label: fig-Adjusted-Candidate-Support-by-State-Type
ggplot(data, aes(x = state, y = pct, fill = candidate_name)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Candidate Support by State Type", x = "State Type (state)", y = "Support Rate (%)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 8))  # Rotate x-axis labels and adjust font size
#| echo: false
#| warning: false
#| label: fig-Support-by-Pollster
data |>
ggplot(aes(x = pollster, y = pct, color = candidate_name)) +
geom_jitter(width = 0.2, alpha = 0.7) +
labs(
title = "Support by Pollster (Scatter Plot Showing All Observations)",
x = "Pollster",
y = "Support Percentage"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +
scale_color_manual(values = c("red", "blue"))
#| echo: false
#| warning: false
#| label: fig-Effect-of-Transparency-Score-on-Support
data |>
ggplot(aes(x = transparency_score, y = pct, color = candidate_name)) +
geom_jitter(width = 0.3, alpha = 0.7) +
geom_smooth(method = "lm") +
labs(
title = "Effect of Transparency Score on Support Percentage",
x = "Transparency Score",
y = "Support Percentage"
) +
theme_minimal() +
scale_color_manual(values = c("#1f77b4", "#ff7f0e"))
#| echo: false
#| warning: false
#| label: fig-Effect-of-Transparency-Score-on-Support
data |>
ggplot(aes(x = transparency_score, y = pct, color = candidate_name)) +
geom_jitter(width = 0.3, alpha = 0.7) +
geom_smooth(method = "lm") +
labs(
title = "Effect of Transparency Score on Support Percentage",
x = "Transparency Score",
y = "Support Percentage"
) +
theme_minimal() +
scale_color_manual(values = c("red", "blue"))
#| echo: false
#| warning: false
#| label: fig-Support-by-Pollster
data |>
ggplot(aes(x = pollster, y = pct, color = candidate_name)) +
geom_jitter(width = 0.2, alpha = 0.7) +
labs(
title = "Support by Pollster (Scatter Plot Showing All Observations)",
x = "Pollster",
y = "Support Percentage"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +
scale_color_manual(values = c("red", "blue"))
#| echo: false
#| warning: false
#| label: fig-Adjusted-Candidate-Support-by-State-Type
ggplot(data, aes(x = state, y = pct, fill = candidate_name)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Candidate Support by State Type", x = "State Type (state)", y = "Support Rate (%)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 8))  # Rotate x-axis labels and adjust font size
#| echo: false
#| warning: false
#| label: fig-Adjusted-Candidate-Support-by-State-Type
ggplot(data, aes(x = state, y = pct, fill = candidate_name)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Candidate Support by State Type", x = "State Type (state)", y = "Support Rate (%)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 8)) +  # Rotate x-axis labels and adjust font size
scale_fill_manual(values = c("Kamala Harris" = "blue", "Donald Trump" = "red"))
summary(harris_model)
summary(trump_model)
pp_check(harris_model)
pp_check(trump_model)
#| echo: false
#| warning: false
#| message: false
output:
pdf_document:
keep_tex: true
#| echo: false
#| warning: false
#| message: false
knitr:
opts_chunk:
collapse: true
install.packages("kableExtra")
library(kableExtra)
install.packages("pander")
#| echo: false
#| warning: false
#| message: false
library(pander)
pander(data)
summary(harris_model)
#| echo: false
#| warning: false
#| label: fig-Effect-of-Transparency-Score-on-Support
data |>
ggplot(aes(x = transparency_score, y = pct, color = candidate_name)) +
geom_jitter(width = 0.3, alpha = 0.7) +
geom_smooth(method = "lm") +
labs(
title = "Effect of Transparency Score on Support Percentage",
x = "Transparency Score",
y = "Support Percentage"
) +
theme_minimal() +
scale_color_manual(values = c("#FF9999", "#66CCCC"))
#| echo: false
#| warning: false
#| label: fig-Support-by-Pollster
data |>
ggplot(aes(x = pollster, y = pct, color = candidate_name)) +
geom_jitter(width = 0.2, alpha = 0.7) +
labs(
title = "Support by Pollster (Scatter Plot Showing All Observations)",
x = "Pollster",
y = "Support Percentage"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +
scale_color_manual(values = c("#FF9999", "#66CCCC"))
#| echo: false
#| warning: false
#| label: fig-Adjusted-Candidate-Support-by-State-Type
ggplot(data, aes(x = state, y = pct, fill = candidate_name)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Candidate Support by State Type", x = "State Type (state)", y = "Support Rate (%)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 8)) +  # Rotate x-axis labels and adjust font size
scale_fill_manual(values = c("Kamala Harris" = "#66CCCC", "Donald Trump" = "#FF9999"))
#| echo: false
#| warning: false
#| message: false
#| results: "hide"
#| label: fig-Key-State
state_support <- combined_data |>
group_by(state, candidate) |>
summarize(avg_support = mean(fitted_pct), .groups = "drop")
# Retain data for key states only
key_states <- c("Florida", "Pennsylvania", "Michigan", "Wisconsin", "Arizona",
"Georgia", "Texas", "California", "New York", "North Carolina")
state_support_filtered <- state_support |>
filter(state %in% key_states)
# Plot predicted support by key states only
fig2 <- ggplot(state_support_filtered, aes(x = reorder(state, avg_support), y = avg_support, fill = candidate)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(
y = "Average Predicted Support Percentage",
x = "State",
title = "Predicted Support in Key States for Harris & Trump"
) +
scale_fill_manual(values = c("Kamala Harris" = "#66CCCC", "Donald Trump" = "#FF9999")) +
coord_flip() +
theme(
axis.text.y = element_text(size = 8)
)
# Print the plot
print(fig2)
summary_combined <- analysis_data %>%
filter(candidate_name %in% c("Kamala Harris", "Donald Trump")) %>%
group_by(candidate_name) %>%
summarise(
avg_pct = mean(pct, na.rm = TRUE),
min_pct = min(pct, na.rm = TRUE),
max_pct = max(pct, na.rm = TRUE)
)
kable(summary_combined, caption = "Comparison Table of Kamala Harris and Donald Trump's Statistics")
#| echo: false
#| warning: false
#| label: fig-Outcome-Table
summary_combined <- data %>%
filter(candidate_name %in% c("Kamala Harris", "Donald Trump")) %>%
group_by(candidate_name) %>%
summarise(
avg_pct = mean(pct, na.rm = TRUE),
min_pct = min(pct, na.rm = TRUE),
max_pct = max(pct, na.rm = TRUE)
)
table(summary_combined, caption = "Comparison Table of Kamala Harris and Donald Trump's Statistics")
install.packages("knitr")
#| include: false
#| warning: false
#| message: false
library(tidyverse)
library(palmerpenguins)
library(rstanarm)
library(modelsummary)
library(janitor)
library(arrow)
library(ggplot2)
library(knitr)
# Load the dataset
data <- read.csv(here::here("/Users/shuhengzhou/Desktop/starter_folder-main 2/data/02-analysis_data/analysis_data.csv"))
#| echo: false
#| warning: false
#| label: fig-Outcome-Table
summary_combined <- data %>%
filter(candidate_name %in% c("Kamala Harris", "Donald Trump")) %>%
group_by(candidate_name) %>%
summarise(
avg_pct = mean(pct, na.rm = TRUE),
min_pct = min(pct, na.rm = TRUE),
max_pct = max(pct, na.rm = TRUE)
)
kable(summary_combined, caption = "Comparison Table of Kamala Harris and Donald Trump's Statistics")
#| echo: false
#| warning: false
#| label: tab-Outcome-Table
summary_combined <- data %>%
filter(candidate_name %in% c("Kamala Harris", "Donald Trump")) %>%
group_by(candidate_name) %>%
summarise(
avg_pct = mean(pct, na.rm = TRUE),
min_pct = min(pct, na.rm = TRUE),
max_pct = max(pct, na.rm = TRUE)
)
kable(summary_combined, caption = "Comparison Table of Kamala Harris and Donald Trump's Statistics")
#| echo: false
#| warning: false
#| label: fig-Relationship-between-Candidate-Support-and-Pollster-Grade
ggplot(data, aes(x = numeric_grade, y = pct, color = candidate_name)) +
geom_point(alpha = 0.7) +
labs(title = "Relationship between Candidate Support and Pollster Grade", x = "Pollster Grade (numeric_grade)", y = "Support Rate (%)") +
theme_minimal()
#| echo: false
#| warning: false
#| label: fig-Effect-of-Transparency-Score-on-Support
data |>
ggplot(aes(x = transparency_score, y = pct, color = candidate_name)) +
geom_jitter(width = 0.3, alpha = 0.7) +
geom_smooth(method = "lm") +
labs(
title = "Effect of Transparency Score on Support Percentage",
x = "Transparency Score",
y = "Support Percentage"
) +
theme_minimal() +
scale_color_manual(values = c("#FF9999", "#66CCCC"))
#| echo: false
#| warning: false
#| label: fig-Support-by-Pollster
data |>
ggplot(aes(x = pollster, y = pct, color = candidate_name)) +
geom_jitter(width = 0.2, alpha = 0.7) +
labs(
title = "Support by Pollster (Scatter Plot Showing All Observations)",
x = "Pollster",
y = "Support Percentage"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +
scale_color_manual(values = c("#FF9999", "#66CCCC"))
#### Preamble ####
# Purpose: Simulates a dataset of U.S. polling data for the 2024 presidential election
# Author: Jiaxuan Song, Zien Gao, Shuheng (Jack) Zhou
# Date: 2024-11-04
# Contact: lauragao75@gmail.com
# License: MIT
# Pre-requisites: The `tidyverse` package must be installed.
# Any other information needed? Make sure you are in the `starter_folder` R project.
#### Workspace setup ####
library(tidyverse)
set.seed(1234)
#### Simulate data ####
# State names
states <- c(
"California", "Texas", "Florida", "New York", "Pennsylvania", "Illinois", "Ohio",
"Georgia", "North Carolina", "Michigan", "Arizona", "Wisconsin", "Nevada", "Minnesota",
"Colorado", "Virginia", "Missouri", "Tennessee", "Indiana", "Massachusetts"
)
# Polling organizations
pollsters <- c("YouGov", "AtlasIntel", "Ipsos", "RMG Research", "Emerson College")
# Pollster quality ratings (numeric_grade)
numeric_grades <- c(1.0, 2.0, 2.5, 3.0)
# Transparency scores
transparency_scores <- c(5, 6, 7, 8, 9, 10)
# Create a dataset by randomly assigning states, pollsters, methodologies, and other predictors
simulated_polling_data <- tibble(
state = sample(
states,
size = 200,
replace = TRUE,
prob = rep(1 / length(states), length(states))  # Equal probability for each state
),
pollster = sample(
pollsters,
size = 200,
replace = TRUE,
prob = rep(1 / length(pollsters), length(pollsters))  # Equal probability for each pollster
),
numeric_grade = sample(
numeric_grades,
size = 200,
replace = TRUE  # Random assignment of pollster quality ratings
),
transparency_score = sample(
transparency_scores,
size = 200,
replace = TRUE  # Random assignment of transparency scores
),
candidate_name = sample(
c("Kamala Harris", "Donald Trump"),  # Focus only on Harris and Trump
size = 200,
replace = TRUE
),
# Assign party based on candidate
pct = round(runif(200, min = 0, max = 60), 1),  # Random percentage support (0-60%)
)
#### Save data ####
write_csv(simulated_polling_data, "/Users/shuhengzhou/Desktop/starter_folder-main 2/data/00-simulated_data/us_simulated_polling_data.parquet")
#### Preamble ####
# Purpose: Tests the structure and validity of the simulated U.S. polling dataset.
# Author: Jiaxuan Song, Zien Gao, Shuheng (Jack) Zhou
# Date: 2024-11-04
# Contact: lauragao75@gmail.com
# License: MIT
# Pre-requisites:
# - The `tidyverse` package must be installed and loaded.
# - 00-simulate_data.R must have been run.
# Any other information needed? Make sure you are in the `starter_folder` R project.
#### Workspace setup ####
library(tidyverse)
analysis_data <- read_csv("data/00-simulated_data/us_simulated_polling_data.parquet")
#### Preamble ####
# Purpose: Tests the structure and validity of the simulated U.S. polling dataset.
# Author: Jiaxuan Song, Zien Gao, Shuheng (Jack) Zhou
# Date: 2024-11-04
# Contact: lauragao75@gmail.com
# License: MIT
# Pre-requisites:
# - The `tidyverse` package must be installed and loaded.
# - 00-simulate_data.R must have been run.
# Any other information needed? Make sure you are in the `starter_folder` R project.
#### Workspace setup ####
library(tidyverse)
analysis_data <- read_csv("data/00-simulated_data/us_simulated_polling_data.parquet")
#### Preamble ####
# Purpose: Tests the structure and validity of the simulated U.S. polling dataset.
# Author: Jiaxuan Song, Zien Gao, Shuheng (Jack) Zhou
# Date: 2024-11-04
# Contact: lauragao75@gmail.com
# License: MIT
# Pre-requisites:
# - The `tidyverse` package must be installed and loaded.
# - 00-simulate_data.R must have been run.
# Any other information needed? Make sure you are in the `starter_folder` R project.
#### Workspace setup ####
library(tidyverse)
analysis_data <- read_csv("data/00-simulated_data/us_simulated_polling_data.parquet")
#### Preamble ####
# Purpose: Tests the structure and validity of the simulated U.S. polling dataset.
# Author: Jiaxuan Song, Zien Gao, Shuheng (Jack) Zhou
# Date: 2024-11-04
# Contact: lauragao75@gmail.com
# License: MIT
# Pre-requisites:
# - The `tidyverse` package must be installed and loaded.
# - 00-simulate_data.R must have been run.
# Any other information needed? Make sure you are in the `starter_folder` R project.
#### Workspace setup ####
library(tidyverse)
analysis_data <- read_csv("data/00-simulated_data/us_simulated_polling_data.parquet")
#### Preamble ####
# Purpose: Simulates a dataset of U.S. polling data for the 2024 presidential election
# Author: Jiaxuan Song, Zien Gao, Shuheng (Jack) Zhou
# Date: 2024-11-04
# Contact: lauragao75@gmail.com
# License: MIT
# Pre-requisites: The `tidyverse` package must be installed.
# Any other information needed? Make sure you are in the `starter_folder` R project.
#### Workspace setup ####
library(tidyverse)
set.seed(1234)
#### Simulate data ####
# State names
states <- c(
"California", "Texas", "Florida", "New York", "Pennsylvania", "Illinois", "Ohio",
"Georgia", "North Carolina", "Michigan", "Arizona", "Wisconsin", "Nevada", "Minnesota",
"Colorado", "Virginia", "Missouri", "Tennessee", "Indiana", "Massachusetts"
)
# Polling organizations
pollsters <- c("YouGov", "AtlasIntel", "Ipsos", "RMG Research", "Emerson College")
# Pollster quality ratings (numeric_grade)
numeric_grades <- c(1.0, 2.0, 2.5, 3.0)
# Transparency scores
transparency_scores <- c(5, 6, 7, 8, 9, 10)
# Create a dataset by randomly assigning states, pollsters, methodologies, and other predictors
simulated_polling_data <- tibble(
state = sample(
states,
size = 200,
replace = TRUE,
prob = rep(1 / length(states), length(states))  # Equal probability for each state
),
pollster = sample(
pollsters,
size = 200,
replace = TRUE,
prob = rep(1 / length(pollsters), length(pollsters))  # Equal probability for each pollster
),
numeric_grade = sample(
numeric_grades,
size = 200,
replace = TRUE  # Random assignment of pollster quality ratings
),
transparency_score = sample(
transparency_scores,
size = 200,
replace = TRUE  # Random assignment of transparency scores
),
candidate_name = sample(
c("Kamala Harris", "Donald Trump"),  # Focus only on Harris and Trump
size = 200,
replace = TRUE
),
# Assign party based on candidate
pct = round(runif(200, min = 0, max = 60), 1),  # Random percentage support (0-60%)
)
#### Save data ####
write_csv(simulated_polling_data, "data/00-simulated_data/us_simulated_polling_data.parquet")
